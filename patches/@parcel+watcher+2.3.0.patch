diff --git a/node_modules/@parcel/watcher/README.md b/node_modules/@parcel/watcher/README.md
index 5c34150..b52bde7 100644
--- a/node_modules/@parcel/watcher/README.md
+++ b/node_modules/@parcel/watcher/README.md
@@ -1,3 +1,11 @@
+# @hackolade/watcher
+Repackaged version of @parcel/watcher
+
+This is a convenience package that will install all prebuilds for all supported platforms, to the contrary to the upstream package that constraint the installation only to the runtime platform (os/cpu).
+This typically enable cross building an Electron application.
+
++The package is cleaned up to only embbed the necessary.
+
 # @parcel/watcher
 
 A native C++ Node module for querying and subscribing to filesystem events. Used by [Parcel 2](https://github.com/parcel-bundler/parcel).
diff --git a/node_modules/@parcel/watcher/index.js b/node_modules/@parcel/watcher/index.js
index 4929c54..e025d50 100644
--- a/node_modules/@parcel/watcher/index.js
+++ b/node_modules/@parcel/watcher/index.js
@@ -1,65 +1,14 @@
 const {createWrapper} = require('./wrapper');
 
-let name = `@parcel/watcher-${process.platform}-${process.arch}`;
-if (process.platform === 'linux') {
-  const { MUSL, family } = require('detect-libc');
-  if (family === MUSL) {
-    name += '-musl';
-  } else {
-    name += '-glibc';
-  }
-}
+const name = `@hackolade/watcher-${process.platform}-${process.arch}`;
 
 let binding;
 try {
-  binding = require(name);
+  binding = require(/* webpackIgnore: true */  name);
 } catch (err) {
-  try {
-    binding = require('./build/Release/watcher.node');
-  } catch (err) {
-    try {
-      binding = require('./build/Debug/watcher.node');
-    } catch (err) {
-      throw new Error(`No prebuild or local build of @parcel/watcher found. Tried ${name}. Please ensure it is installed (don't use --no-optional when installing with npm). Otherwise it is possible we don't support your platform yet. If this is the case, please report an issue to https://github.com/parcel-bundler/watcher.`);
-    }
-  }
-}
-
-function normalizeOptions(dir, opts = {}) {
-  const { ignore, ...rest } = opts;
-
-  if (Array.isArray(ignore)) {
-    opts = { ...rest };
-
-    for (const value of ignore) {
-      if (isGlob(value)) {
-        if (!opts.ignoreGlobs) {
-          opts.ignoreGlobs = [];
-        }
-
-        const regex = micromatch.makeRe(value, {
-          // We set `dot: true` to workaround an issue with the
-          // regular expression on Linux where the resulting
-          // negative lookahead `(?!(\\/|^)` was never matching
-          // in some cases. See also https://bit.ly/3UZlQDm
-          dot: true,
-          // C++ does not support lookbehind regex patterns, they
-          // were only added later to JavaScript engines
-          // (https://bit.ly/3V7S6UL)
-          lookbehinds: false
-        });
-        opts.ignoreGlobs.push(regex.source);
-      } else {
-        if (!opts.ignorePaths) {
-          opts.ignorePaths = [];
-        }
-
-        opts.ignorePaths.push(path.resolve(dir, value));
-      }
-    }
-  }
-
-  return opts;
+  console.error('failed to load @hackolade/watcher prebuild');
+  console.error(err);
+  throw new Error(`No prebuild or local build of @hackolade/watcher found. Tried ${name}. Please ensure it is installed (don't use --no-optional when installing with npm). Otherwise it is possible we don't support your platform yet. If this is the case.`);
 }
 
 const wrapper = createWrapper(binding);
diff --git a/node_modules/@parcel/watcher/index.js.flow b/node_modules/@parcel/watcher/index.js.flow
deleted file mode 100644
index d75da93..0000000
--- a/node_modules/@parcel/watcher/index.js.flow
+++ /dev/null
@@ -1,48 +0,0 @@
-// @flow
-declare type FilePath = string;
-declare type GlobPattern = string;
-
-export type BackendType = 
-  | 'fs-events'
-  | 'watchman'
-  | 'inotify'
-  | 'windows'
-  | 'brute-force';
-export type EventType = 'create' | 'update' | 'delete';
-export interface Options {
-  ignore?: Array<FilePath | GlobPattern>,
-  backend?: BackendType
-}
-export type SubscribeCallback = (
-  err: ?Error,
-  events: Array<Event>
-) => mixed;
-export interface AsyncSubscription {
-  unsubscribe(): Promise<void>
-}
-export interface Event {
-  path: FilePath,
-  type: EventType
-}
-declare module.exports: {
-  getEventsSince(
-    dir: FilePath,
-    snapshot: FilePath,
-    opts?: Options
-  ): Promise<Array<Event>>,
-  subscribe(
-    dir: FilePath,
-    fn: SubscribeCallback,
-    opts?: Options
-  ): Promise<AsyncSubscription>,
-  unsubscribe(
-    dir: FilePath,
-    fn: SubscribeCallback,
-    opts?: Options
-  ): Promise<void>,
-  writeSnapshot(
-    dir: FilePath,
-    snapshot: FilePath,
-    opts?: Options
-  ): Promise<FilePath>
-}
\ No newline at end of file
diff --git a/node_modules/@parcel/watcher/package.json b/node_modules/@parcel/watcher/package.json
index 0ab049f..65ec4d2 100644
--- a/node_modules/@parcel/watcher/package.json
+++ b/node_modules/@parcel/watcher/package.json
@@ -24,12 +24,6 @@
     "package.json",
     "README.md"
   ],
-  "scripts": {
-    "prebuild": "prebuildify --napi --strip --tag-libc",
-    "format": "prettier --write \"./**/*.{js,json,md}\"",
-    "build": "node-gyp rebuild -j 8 --debug --verbose",
-    "test": "mocha"
-  },
   "engines": {
     "node": ">= 10.0.0"
   },
@@ -45,10 +39,8 @@
     ]
   },
   "dependencies": {
-    "detect-libc": "^1.0.3",
     "is-glob": "^4.0.3",
-    "micromatch": "^4.0.5",
-    "node-addon-api": "^7.0.0"
+    "micromatch": "^4.0.5"
   },
   "devDependencies": {
     "fs-extra": "^10.0.0",
@@ -68,14 +60,6 @@
     "@parcel/watcher-darwin-x64": "2.3.0",
     "@parcel/watcher-darwin-arm64": "2.3.0",
     "@parcel/watcher-win32-x64": "2.3.0",
-    "@parcel/watcher-win32-arm64": "2.3.0",
-    "@parcel/watcher-win32-ia32": "2.3.0",
-    "@parcel/watcher-linux-x64-glibc": "2.3.0",
-    "@parcel/watcher-linux-x64-musl": "2.3.0",
-    "@parcel/watcher-linux-arm64-glibc": "2.3.0",
-    "@parcel/watcher-linux-arm64-musl": "2.3.0",
-    "@parcel/watcher-linux-arm-glibc": "2.3.0",
-    "@parcel/watcher-android-arm64": "2.3.0",
-    "@parcel/watcher-freebsd-x64": "2.3.0"
+    "@parcel/watcher-linux-x64-glibc": "2.3.0"
   }
 }
