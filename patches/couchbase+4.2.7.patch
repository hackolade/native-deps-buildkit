diff --git a/node_modules/couchbase/CMakeLists.txt b/node_modules/couchbase/CMakeLists.txt
index 0ce5bc3..3512b67 100644
--- a/node_modules/couchbase/CMakeLists.txt
+++ b/node_modules/couchbase/CMakeLists.txt
@@ -117,7 +117,7 @@ include_directories(${NODEJS_INC_DIR})
 set(COUCHBASE_CXX_CLIENT_BUILD_TESTS OFF CACHE BOOL "" FORCE)
 set(COUCHBASE_CXX_CLIENT_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
 set(COUCHBASE_CXX_CLIENT_BUILD_TOOLS OFF CACHE BOOL "" FORCE)
-set(COUCHBASE_CXX_CLIENT_POST_LINKED_OPENSSL ON CACHE BOOL "")
+set(COUCHBASE_CXX_CLIENT_POST_LINKED_OPENSSL OFF CACHE BOOL "")
 set(COUCHBASE_CXX_CLIENT_STATIC_STDLIB ON CACHE BOOL "" FORCE)
 add_subdirectory(deps/couchbase-cxx-client)
 
diff --git a/node_modules/couchbase/package.json b/node_modules/couchbase/package.json
index 324198c..2d0fee9 100644
--- a/node_modules/couchbase/package.json
+++ b/node_modules/couchbase/package.json
@@ -20,7 +20,6 @@
   "license": "Apache-2.0",
   "name": "couchbase",
   "dependencies": {
-    "cmake-js": "^7.2.0",
     "node-addon-api": "^5.0.0"
   },
   "devDependencies": {
@@ -32,6 +31,7 @@
     "@typescript-eslint/eslint-plugin": "^5.32.0",
     "@typescript-eslint/parser": "^5.32.0",
     "chai": "^4.3.6",
+    "cmake-js": "^7.2.0",
     "eslint": "^8.21.0",
     "eslint-config-prettier": "^8.5.0",
     "eslint-plugin-jsdoc": "^41.1.0",
@@ -60,11 +60,9 @@
     "native": false
   },
   "scripts": {
-    "install": "node ./scripts/install.js",
     "build": "cmake-js build && tsc",
-    "rebuild": "cmake-js rebuild && tsc",
+    "rebuild": "cmake-js rebuild",
     "prebuild": "prebuild --backend cmake-js --verbose --strip",
-    "prepare": "tsc",
     "help-prune": "node ./scripts/prune.js",
     "build-docs": "typedoc",
     "test": "ts-mocha test/*.test.*",
@@ -79,18 +77,11 @@
       6
     ]
   },
-  "optionalDependencies": {
-    "@couchbase/couchbase-darwin-arm64-openssl1": "4.2.7",
-    "@couchbase/couchbase-darwin-arm64-openssl3": "4.2.7",
-    "@couchbase/couchbase-darwin-x64-openssl1": "4.2.7",
-    "@couchbase/couchbase-darwin-x64-openssl3": "4.2.7",
-    "@couchbase/couchbase-linux-arm64-openssl1": "4.2.7",
-    "@couchbase/couchbase-linux-arm64-openssl3": "4.2.7",
-    "@couchbase/couchbase-linux-x64-openssl1": "4.2.7",
-    "@couchbase/couchbase-linux-x64-openssl3": "4.2.7",
-    "@couchbase/couchbase-linuxmusl-x64-openssl1": "4.2.7",
-    "@couchbase/couchbase-linuxmusl-x64-openssl3": "4.2.7",
-    "@couchbase/couchbase-win32-x64-openssl1": "4.2.7",
-    "@couchbase/couchbase-win32-x64-openssl3": "4.2.7"
-  }
+  "files": [
+    "dist",
+    "scripts",
+    "package.json",
+    "README.md",
+    "LICENSE"
+  ]
 }
\ No newline at end of file
diff --git a/node_modules/couchbase/scripts/install.js b/node_modules/couchbase/scripts/install.js
index 4bf054f..a4f8801 100755
--- a/node_modules/couchbase/scripts/install.js
+++ b/node_modules/couchbase/scripts/install.js
@@ -37,9 +37,9 @@ function installPrebuild() {
       require('cmake-js/package.json').bin['cmake-js']
     )
     // @TODO: is spawning sync a problem? Seemed to be easiest way to get Ctrl-C to kill the whole build process
-    const cmakejsProc = proc.spawnSync(process.execPath, [cmakejs, 'compile'], {
-      stdio: 'inherit',
-    })
-    process.exit(cmakejsProc.status)
+    // const cmakejsProc = proc.spawnSync(process.execPath, [cmakejs, 'compile'], {
+    //   stdio: 'inherit',
+    // })
+    // process.exit(cmakejsProc.status)
   }
 }
diff --git a/node_modules/couchbase/scripts/prebuilds.js b/node_modules/couchbase/scripts/prebuilds.js
index 0da8ef5..787f9db 100644
--- a/node_modules/couchbase/scripts/prebuilds.js
+++ b/node_modules/couchbase/scripts/prebuilds.js
@@ -13,7 +13,7 @@ const openSSLVersions = ['openssl1', 'openssl3']
 const supportedPlatforms = ['darwin', 'linux', 'linuxmusl', 'win32']
 const supportedArches = ['x64', 'arm64']
 
-const runtime = isElectron() ? 'electron' : 'node'
+const runtime = 'node'
 const nodeVersion = getNodeVersion()
 const nodeVersionMajor = getNodeMajorVersion(nodeVersion)
 const arch = process.arch
@@ -203,7 +203,7 @@ function resolvePrebuild(dir, runtimeResolve = true) {
         platform === 'linux' ? libc : platform
       }-${arch}-${sslType}`
       if (supportedPackages.includes(platformPkg)) {
-        const fullPlatformPkgName = `@${packageName}/${platformPkg}`
+        const fullPlatformPkgName = `@hackolade/${platformPkg}`
         const packageRequire = require('module').createRequire(
           path.join(dir, 'package.json')
         )
